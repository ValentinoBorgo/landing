---
interface Props {
	title: string;
	description: string;
	image?: string;
	video?: string;
	tags: string[];
}

const { title, description, image, video, tags } = Astro.props;
---

<div class="project-card">
	<div class="project-media">
		{video ? (
			<div class="video-container">
				<iframe
					src={`https://www.youtube.com/embed/${video.split('v=')[1] || video.split('/')[3]}`}
					title={title}
					frameborder="0"
					allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
					allowfullscreen
				></iframe>
			</div>
		) : (
			<div class="project-image">
				<img src={image} alt={title} />
			</div>
		)}
	</div>
	<div class="project-content">
		<h3>{title}</h3>
		<p>{description}</p>
		<div class="tags">
			{tags.map((tag) => <span class="tag">{tag}</span>)}
		</div>
	</div>
</div>

<style>
	.project-card {
		background: white;
		border-radius: 1rem;
		overflow: hidden;
		box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
		transition: transform 0.3s ease;
		border: 1px solid #eee;
	}

	.project-card:hover {
		transform: translateY(-5px);
	}

	.project-media {
		height: 200px;
		overflow: hidden;
		border-bottom: 3px solid var(--color-orange);
	}

	.project-image {
		height: 100%;
		width: 100%;
	}

	.project-image img {
		width: 100%;
		height: 100%;
		object-fit: cover;
	}

	.video-container {
		position: relative;
		width: 100%;
		height: 100%;
	}

	.video-container iframe {
		position: absolute;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		border: none;
	}

	.project-content {
		padding: 1.5rem;
	}

	h3 {
		font-size: 1.5rem;
		color: var(--color-purple);
		margin-bottom: 0.5rem;
	}

	p {
		color: var(--text-color);
		margin-bottom: 1rem;
	}

	.tags {
		display: flex;
		flex-wrap: wrap;
		gap: 0.5rem;
	}

	.tag {
		background-color: var(--color-pink);
		color: white;
		padding: 0.25rem 0.75rem;
		border-radius: 9999px;
		font-size: 0.875rem;
	}
</style>